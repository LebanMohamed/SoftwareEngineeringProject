
package parts.gui;

import common.Database;
import java.awt.*;
import java.awt.event.*;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.*;
import parts.logic.Transactions;
import parts.gui.prompts.AddPartDeliveryPrompt;
import parts.gui.prompts.EditPartDeliveryPrompt;


/**
 *
 * @author: Taiybah Hussain EC15205
 * Reference List
 * 1. ManageUsersDialog.java : Used as an example for adding table models to JTables
 * 2. ManageUsersDialog.java : Used setLocationto(null) to centre dialog
 * 3. http://www.programcreek.com/java-api-examples/javax.swing.table.DefaultTableCellRenderer : Used to change JTable Layout
 * 4. http://stackoverflow.com/questions/3879610/how-to-clear-contents-of-a-jtable : Used to clear JTable
 * 5. LoginFrame.java : Used setTitle() to set a title to the dialog
 * 6. http://stackoverflow.com/questions/29123451/setmodal-method-on-a-jdialog: Used to set Modal
 */
public class PartDelivery extends javax.swing.JDialog {
               
    private javax.swing.JMenuItem AddDeliveryMenuItem;
    private javax.swing.JMenuItem EditDeliveryMenuItem;
    private javax.swing.JMenuItem DeleteDeliveryMenuItem;
    private javax.swing.JTable TransactionTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton done;
    /**
     * Creates new form PartTransactions
     */
    public PartDelivery() {
        initComponents();
        setModal(true);
        this.TransactionTable.setModel(TableModel);
        TableModel.loadTransactions();
        Transactions tran;
        
        DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
        leftRenderer.setHorizontalAlignment(DefaultTableCellRenderer.LEFT);
        TransactionTable.getColumn("Part ID").setCellRenderer(leftRenderer);
        TransactionTable.getColumn("Part Name").setCellRenderer(leftRenderer);
        TransactionTable.getColumn("Description").setCellRenderer(leftRenderer);
        TransactionTable.getColumn("Quantity Added").setCellRenderer(leftRenderer);
        
        TableColumnModel tcm = TransactionTable.getColumnModel();
        tcm.getColumn(0).setPreferredWidth(20);
        tcm.getColumn(1).setPreferredWidth(50);
        tcm.getColumn(2).setPreferredWidth(150);
        tcm.getColumn(3).setPreferredWidth(20);
        
    }
    private TransactionTableModel TableModel = new TransactionTableModel();
    private PartsWithdrawalTableModel TableModel2 = new PartsWithdrawalTableModel();

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        
        setTitle("Part Delivery");
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransactionTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        AddDeliveryMenuItem = new javax.swing.JMenuItem();
        EditDeliveryMenuItem = new javax.swing.JMenuItem();
        DeleteDeliveryMenuItem = new javax.swing.JMenuItem();
        done = new javax.swing.JButton();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Part Deliveries");

        TransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PartID","Part Name", "Description", "Quantity Added"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class,java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TransactionTable);
        

        jMenu1.setText("Menu");

        
        AddDeliveryMenuItem.setText("Add Stock Delivery");
        AddDeliveryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDeliveryMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(AddDeliveryMenuItem);
        
        EditDeliveryMenuItem.setText("Edit Stock Delivery");
        EditDeliveryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    EditDeliveryMenuItemActionPerformed(evt);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
        jMenu1.add(EditDeliveryMenuItem);
        
        DeleteDeliveryMenuItem.setText("Delete Stock Delivery");
        DeleteDeliveryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    DeleteDeliveryMenuItemActionPerformed(evt);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
        jMenu1.add(DeleteDeliveryMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);
        
        done.setText("Done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(done)
                .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(done)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        setPreferredSize(new java.awt.Dimension(1072, 500));
        pack();
        setLocationRelativeTo(null); 
    }// </editor-fold>                        
                                               
    
    private void AddDeliveryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                   
       AddPartDeliveryPrompt ap = new AddPartDeliveryPrompt();
       try {
            ap.show();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error with show()");
        }
       if (ap.isSuccessfull()){
            Transactions t;
            t = ap.parseAddTransaction();
            try{
                Database.getInstance().addPartTransaction(t);
            }
            
            catch(SQLException e)
            {
               JOptionPane.showMessageDialog(this,"Database Error with editing delivery"); 
            } 
       }
       dispose();
       new PartDelivery().setVisible(true);
    }
    
    private void EditDeliveryMenuItemActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        int row = TransactionTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select Row", "Edit Stock Part", JOptionPane.ERROR_MESSAGE);
        }
        else{
            row++;
            Transactions trans = Database.getInstance().getPartDeliveryWithID(row);
            EditPartDeliveryPrompt ap = new EditPartDeliveryPrompt(trans);
            try {
                 ap.show();
             } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(this,"Error with show()");
             }
            if (ap.isSuccessfull()){
                 Transactions t;
                 t = ap.parseEditTransaction();
                 try{
                     Database.getInstance().editPartDelivery(t, row);
                 }

                 catch(SQLException e)
                 {
                    JOptionPane.showMessageDialog(this,"Database Error with editing stock delivery"); 
                 } 
            }
            dispose();
            new PartDelivery().setVisible(true);
        }
    }
    
    private void DeleteDeliveryMenuItemActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        int row = TransactionTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select Row", "Edit Stock Part", JOptionPane.ERROR_MESSAGE);
        }
        else{
            row++;
            Database.getInstance().deletePartDelivery(row);
            
            dispose();
            new PartDelivery().setVisible(true);
        }
    }
    
    private void doneActionPerformed(java.awt.event.ActionEvent evt) {                                     
        dispose();
    }  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PartDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PartDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PartDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PartDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PartDelivery().setVisible(true);
            }
        });
    }               
}
