
package parts.gui;

import java.sql.SQLException;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import parts.gui.prompts.AddPartWithdrawalPrompt;
import parts.gui.prompts.EditPartWithdrawalPrompt;
import parts.logic.PartWithdrawals;
import common.Database;
/**
 *
 * @author: Taiybah Hussain EC15205
 *  * Reference List
 * 1. ManageUsersDialog.java : Used as an example for adding table models to JTables
 * 2. ManageUsersDialog.java : Used setLocationto(null) to centre dialog
 * 3. http://www.programcreek.com/java-api-examples/javax.swing.table.DefaultTableCellRenderer : Used to change JTable Layout
 * 4. http://stackoverflow.com/questions/3879610/how-to-clear-contents-of-a-jtable : Used to clear JTable
 * 5. LoginFrame.java : Used setTitle() to set a title to the dialog
 * 6. http://stackoverflow.com/questions/29123451/setmodal-method-on-a-jdialog: Used to set Modal
 */
public class ManageBookedParts extends javax.swing.JDialog {

                  
    private javax.swing.JMenuItem Addwithdrawal;
    private javax.swing.JMenuItem DeleteWithdrawal;
    private javax.swing.JButton Done;
    private javax.swing.JMenuItem EditWithdrawal;
    private javax.swing.JMenu Menu;
    private javax.swing.JCheckBoxMenuItem editHelp;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable partWithdrawalTable;
    private javax.swing.JButton showPartWithdraw;  
    /**
     * Creates new form ManagePartWithdrawals
     * @throws java.text.ParseException
     */
    public ManageBookedParts() throws ParseException {
        initComponents();
        setTitle("Manage Parts Booked");         
        this.partWithdrawalTable.setModel(TableModel); 
        TableModel.loadWithdrawals();
        setPreferredSize(new java.awt.Dimension(1072, 500));
        setModal(true);         
        
        DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
        leftRenderer.setHorizontalAlignment(DefaultTableCellRenderer.LEFT);
        partWithdrawalTable.getColumn("Booking ID").setCellRenderer(leftRenderer);
        partWithdrawalTable.getColumn("Quantity").setCellRenderer(leftRenderer);
        partWithdrawalTable.getColumn("Type").setCellRenderer(leftRenderer);
        partWithdrawalTable.getColumn("Booking ID").setMaxWidth(100);
        partWithdrawalTable.getColumn("Booking Date").setMinWidth(50);
        partWithdrawalTable.getColumn("Customer Name").setMinWidth(100);
        partWithdrawalTable.getColumn("Quantity").setMaxWidth(75);
        
    }
    private PartsWithdrawalTableModel TableModel = new PartsWithdrawalTableModel();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        partWithdrawalTable = new javax.swing.JTable();
        Done = new javax.swing.JButton();
        showPartWithdraw = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        Addwithdrawal = new javax.swing.JMenuItem();
        EditWithdrawal = new javax.swing.JMenuItem();
        DeleteWithdrawal = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        editHelp = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        partWithdrawalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Vehicle Reg", "Customer Name", "Part Name", "Part Cost", "Quantity", "Type"
            }
        ));
        jScrollPane1.setViewportView(partWithdrawalTable);

        Done.setText("Done");
        Done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneActionPerformed(evt);
            }
        });

        showPartWithdraw.setText("Show Parts Withdrawals");
        showPartWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPartWithdrawActionPerformed(evt);
            }
        });


        Menu.setText("Menu");

        Addwithdrawal.setText("Add Booking Part");
        Addwithdrawal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddwithdrawalActionPerformed(evt);
            }
        });
        Menu.add(Addwithdrawal);

        EditWithdrawal.setText("Edit Booking Part");
        EditWithdrawal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    EditWithdrawalActionPerformed(evt);
                } catch (SQLException ex) {
                   ex.printStackTrace();
                } catch (ParseException ex) {
                    ex.printStackTrace();
                }
            }
        });
        Menu.add(EditWithdrawal);

        DeleteWithdrawal.setText("Delete Booking Part");
        DeleteWithdrawal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteWithdrawalActionPerformed(evt);
            }
        });
        Menu.add(DeleteWithdrawal);

        jMenuBar1.add(Menu);

        jMenu1.setText("Help");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Adding Part Withdrawals?");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        editHelp.setSelected(true);
        editHelp.setText("Editing Part Withdrawals?");
        editHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editHelpActionPerformed(evt);
            }
        });
        jMenu1.add(editHelp);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(showPartWithdraw)
                        .addGap(18, 18, 18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Done)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Done)
                    .addComponent(showPartWithdraw))
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null); 
    }// </editor-fold>                        

    private void AddwithdrawalActionPerformed(java.awt.event.ActionEvent evt) {                                              
         AddPartWithdrawalPrompt ap = new AddPartWithdrawalPrompt();
        try {
            ap.show();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error with show()");
        }
        if (ap.isSuccessfull()){
            PartWithdrawals pw;
            pw = ap.parsePartWithdrawals();
            try{
                Database.getInstance().addPartWithdrawal(pw);
                
            }
            
            catch(SQLException e)
            {
               JOptionPane.showMessageDialog(this,"Database Error with adding booking part"); 
            } 
            clearTable(partWithdrawalTable);
             try {
                 TableModel.loadWithdrawals();
             } catch (ParseException ex) {
                 ex.printStackTrace();
             }
        }
    }                                             

    private void DoneActionPerformed(java.awt.event.ActionEvent evt) {                                     
        dispose();
    }                                    

    private void EditWithdrawalActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, ParseException {                                               
        int row = partWithdrawalTable.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Select Row", "Edit Booking Part", JOptionPane.ERROR_MESSAGE);
    }
    else{
        row++;
        boolean check = Database.getInstance().checkPastBookingForPartsInstalled(row);
        EditPartWithdrawalPrompt ep = new EditPartWithdrawalPrompt(row);
        if(check==true){
            try {
                ep.show();
            if (ep.isSuccessfull()){
                PartWithdrawals pw;
                pw = ep.parsePartWithdrawals();
                try{
                    Database.getInstance().editPartWithdrawals(pw, row);
                }

                catch(SQLException e)
                {
                   JOptionPane.showMessageDialog(this,"Database Error with adding Booking part"); 
                } 

                clearTable(partWithdrawalTable);
                     try {
                         TableModel.loadWithdrawals();
                     } catch (ParseException ex) {
                         ex.printStackTrace();
                     }
            }
        }
         catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "show edit prompt error");
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "show edit prompt error");
            }
    }else{
            JOptionPane.showMessageDialog(this,"Booking Expired: You can not edit this booking");
       }
    
    }}
                                                 

    private void DeleteWithdrawalActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        int rowNo = partWithdrawalTable.getSelectedRow();
        if (rowNo == -1) {
            JOptionPane.showMessageDialog(this, "Select Row", "Delete Booking Part", JOptionPane.ERROR_MESSAGE);
        }
        else{
            rowNo++;

            try {
                    Database.getInstance().deletePartsInstalled(rowNo);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error deleting row");
                }
            clearTable(partWithdrawalTable);
                 try {
                     TableModel.loadWithdrawals();
                 } catch (ParseException ex) {
                     ex.printStackTrace();
                 }
        }
    }                                                

    private void showPartWithdrawActionPerformed(java.awt.event.ActionEvent evt) {                                                 
       partWithdrawal p = new partWithdrawal();
       p.setVisible(true);
    }                                                
                                       

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        JOptionPane.showMessageDialog(this, "To Add a Part Withdrawal: "+"\n" + "Click the Menu, Click Add Booking Part, Enter the details required, When choosing type click Replacement and then click Done");
    }                                                  

    private void editHelpActionPerformed(java.awt.event.ActionEvent evt) {                                         
        JOptionPane.showMessageDialog(this, "To Edit a Part Withdrawal: "+"\n" + "First click a row in the table you want to change where type is Replacement "+"\n" + "Click the Menu, Click Edit Booking Part, Change field/s and then click Done");
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBookedParts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBookedParts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBookedParts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBookedParts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ManageBookedParts().setVisible(true);
                } catch (ParseException ex) {
                    
                }
            }
        });
    }
    public void clearTable(JTable TableName){
        DefaultTableModel model;
        model = (DefaultTableModel)TableName.getModel();

    while (model.getRowCount() > 0){
        for (int i = 0; i < model.getRowCount(); ++i){
            model.removeRow(i);
        }
    }
    }           
}
